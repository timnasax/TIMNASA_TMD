"use strict";
const { timoth } = require("../timnasa/timoth");
const moment = require("moment-timezone");
const os = require("os");
const s = require("../set");

const readMore = String.fromCharCode(8206).repeat(4001);

// Function to convert text to fancy uppercase font
const toFancyUppercaseFont = (text) => {
    const fonts = {
        'A': 'ùêÄ', 'B': 'ùêÅ', 'C': 'ùêÇ', 'D': 'ùêÉ', 'E': 'ùêÑ', 'F': 'ùêÖ', 'G': 'ùêÜ', 'H': 'ùêá', 'I': 'ùêà', 'J': 'ùêâ', 'K': 'ùêä', 'L': 'ùêã', 'M': 'ùêå',
        'N': 'ùêç', 'O': 'ùêé', 'P': 'ùêè', 'Q': 'ùêê', 'R': 'ùêë', 'S': 'ùêí', 'T': 'ùêì', 'U': 'ùêî', 'V': 'ùêï', 'W': 'ùêñ', 'X': 'ùêó', 'Y': 'ùêò', 'Z': 'ùêô'
    };
    return text.split('').map(char => fonts[char] || char).join('');
};

// Function to convert text to fancy lowercase font
const toFancyLowercaseFont = (text) => {
    const fonts = {
        'a': '·¥Ä', 'b': ' ô', 'c': '·¥Ñ', 'd': '·¥Ö', 'e': '·¥á', 'f': '“ì', 'g': '…¢', 'h': ' ú', 'i': '…™', 'j': '·¥ä', 'k': '·¥ã', 'l': ' ü', 'm': '·¥ç',
        'n': '…¥', 'o': '·¥è', 'p': '·¥ò', 'q': '«´', 'r': ' Ä', 's': 's', 't': '·¥õ', 'u': '·¥ú', 'v': '·¥†', 'w': '·¥°', 'x': 'x', 'y': ' è', 'z': '·¥¢'
    };
    return text.split('').map(char => fonts[char] || char).join('');
};

timoth({ 
    nomCom: "timoth", 
    categorie: "General", 
    reaction: "‚ò¢Ô∏è", 
    nomFichier: __filename 
}, async (dest, zk, commandeOptions) => {
    const { repondre, prefixe, nomAuteurMessage } = commandeOptions;
    const { cm } = require("../timnasa/timoth");
    let coms = {};
    let mode = "public";
    
    if ((s.MODE).toLocaleLowerCase() != "yes") {
        mode = "private";
    }

    cm.map(async (com) => {
        if (!coms[com.categorie]) coms[com.categorie] = [];
        coms[com.categorie].push(com.nomCom);
    });

    moment.tz.setDefault("Africa/Dar_es_Salaam");
    const hour = moment().hour();
    let greeting = "…¢·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥…¢";
    if (hour >= 12 && hour < 18) greeting = "…¢·¥è·¥è·¥Ö ·¥Ä“ì·¥õ·¥á Ä…¥·¥è·¥è…¥!";
    else if (hour >= 18) greeting = "…¢·¥è·¥è·¥Ö ·¥á·¥†·¥á…¥…™…¥…¢!";
    else if (hour >= 22 || hour < 5) greeting = "…¢·¥è·¥è·¥Ö …¥…™…¢ ú·¥õ";

    const temps = moment().format('HH:mm:ss');
    const date = moment().format('DD/MM/YYYY');
    const img = 'https://files.catbox.moe/5x1y2z.png';
    const imgs = 'https://files.catbox.moe/5x1y2z.png';

    const infoMsg = `
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ä∑
*‚îã* * ô·¥è·¥õ …¥·¥Ä·¥ç·¥á :  LUCKY MD X-FORCE*
*‚îã* *·¥ò Ä·¥á“ì…™x :* [ ${s.PREFIXE} ]
*‚îã* *·¥ç·¥è·¥Ö·¥á :* ${mode}
*‚îã* *·¥Ö·¥Ä·¥õ·¥á  :* ${date}
*‚îã* *·¥ò ü·¥Ä·¥õ“ì·¥è Ä·¥ç :* ${os.platform()}
*‚îã* *·¥è·¥°…¥·¥á Ä …™s : FREDI*
*‚îã* *·¥ò ü·¥ú…¢…™…¥s ·¥Ñ·¥ç·¥Ö :* ${cm.length}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ä∑\n`;
    
    let menuMsg = ` *${greeting}*`;
    
    for (const cat in coms) {
        menuMsg += `
*„Äå ${toFancyUppercaseFont(cat)} „Äç*
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ä∑ `;
        for (const cmd of coms[cat]) {
            menuMsg += `          
*‚îã* ${toFancyLowercaseFont(cmd)}`;   
        }
        menuMsg += `
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ä∑`;
    }
    
    menuMsg += `
> @made by FredieTech 2025\n`;

    try {
        await zk.sendMessage(dest, { 
            image: { url: img },
            caption: infoMsg + menuMsg,
            contextInfo: {
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: "120363313124070136@newsletter",
                    newsletterName: "@FrediEzra",
                    serverMessageId: -1
                },
                forwardingScore: 999,
                externalAdReply: {
                    title: "‚ò¢Ô∏è TIMNASA-MD-FORCE‚ò¢Ô∏è",
                    body: "üßÉCommand List",
                    thumbnailUrl: imgs,
                    sourceUrl: "https://whatsapp.com/channel/0029VajweHxKQuJP6qnjLM31",
                    mediaType: 1,
                    renderLargerThumbnail: true
                }
            }
        });
      } catch (error) {
        console.error("Menu error: ", error);
        repondre("ü•µü•µ Menu error: " + error);
    }
});
      
